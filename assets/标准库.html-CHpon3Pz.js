import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,a,b as e,d as o,o as l}from"./app-Bs1Bjfd8.js";const d="/assets/pFBgodS-DNzwnIo_.png",n="/assets/pFrwwb4-PTlsvzDw.png",i={},s=e("h1",{id:"标准库",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#标准库"},[e("span",null,"标准库")])],-1),p=e("p",null,"库 Library API Application Program Interface - 应用程序编程接口",-1),h=o('<h2 id="包装类" tabindex="-1"><a class="header-anchor" href="#包装类"><span>包装类</span></a></h2><p>如果尝试着把原始类型（number、string、boolean）当做对象使用，JS会自动将其转换为对应包装类的实例</p><h3 id="number" tabindex="-1"><a class="header-anchor" href="#number"><span>Number</span></a></h3><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number" target="_blank" rel="noopener noreferrer">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number</a></p><table><thead><tr><th>API</th><th>含义</th><th>备注</th></tr></thead><tbody><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/NaN" target="_blank" rel="noopener noreferrer">Number.NaN</a></td><td>表示一个数学上并不存在的数字</td><td>可以直接书写为<code>NaN</code></td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN" target="_blank" rel="noopener noreferrer">Number.isNaN()</a></td><td>判断传入的值是否是NaN</td><td>可以直接书写为<code>isNaN</code></td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger" target="_blank" rel="noopener noreferrer">Number.isInteger()</a></td><td>判断传入的值是否是整数</td><td></td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/parseInt" target="_blank" rel="noopener noreferrer">Number.parseInt()</a></td><td>把传入的值转换为整数形式返回</td><td>可以直接书写为<code>parseInt()</code></td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/parseFloat" target="_blank" rel="noopener noreferrer">Number.parseFloat()</a></td><td>把传入的值转换为小数形式返回</td><td>可以直接书写为<code>parseFloat()</code></td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/toFixed" target="_blank" rel="noopener noreferrer">Number.prototype.toFixed()</a></td><td>将当前数字保留指定位数的小数返回</td><td>传入小数位数</td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/tostring" target="_blank" rel="noopener noreferrer">Number.prototype.toString()</a></td><td>将当前数字转换为字符串返回</td><td>传入进制2-36</td></tr></tbody></table><h3 id="string" tabindex="-1"><a class="header-anchor" href="#string"><span>String</span></a></h3><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String" target="_blank" rel="noopener noreferrer">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String</a></p><table><thead><tr><th>API</th><th>含义</th><th>备注</th></tr></thead><tbody><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/fromCharCode" target="_blank" rel="noopener noreferrer">String.fromCharCode()</a></td><td>根据编码值得到一个字符</td><td>传入一个或多个编码值</td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/length" target="_blank" rel="noopener noreferrer">String.prototype.length</a></td><td>得到字符串的长度</td><td></td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/charCodeAt" target="_blank" rel="noopener noreferrer">String.prototype.charCodeAt()</a></td><td>得到某个下标的字符编码</td><td>传入下标</td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/includes" target="_blank" rel="noopener noreferrer">String.prototype.includes()</a></td><td>判断当前字符串是否包含某个子串</td><td>传入子串</td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/indexOf" target="_blank" rel="noopener noreferrer">String.prototype.indexOf()</a></td><td>判断某个字符串在当前字符串中的第一个下标位置</td><td>如果没有，返回-1</td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/lastIndexOf" target="_blank" rel="noopener noreferrer">String.prototype.lastIndexOf()</a></td><td>判断某个字符串在当前字符串中的最后一个下标位置</td><td>如果没有，返回-1</td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith" target="_blank" rel="noopener noreferrer">String.prototype.endsWith()</a></td><td>判断某个字符串是否以指定的字符串结束</td><td>传入一个字符串</td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith" target="_blank" rel="noopener noreferrer">String.prototype.startsWith()</a></td><td>判断某个字符串是否以指定的字符串开始</td><td>传入一个字符串</td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/padStart" target="_blank" rel="noopener noreferrer">String.prototype.padStart()</a></td><td>将当前的字符串按照指定的字符在字符串开始位置填充到指定的位数，返回填充后的字符串</td><td>传入位数、填充字符</td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/padEnd" target="_blank" rel="noopener noreferrer">String.prototype.padEnd()</a></td><td>将当前的字符串按照指定的字符在字符串结束位置填充到指定的位数，返回填充后的字符串</td><td>传入位数、填充字符</td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/split" target="_blank" rel="noopener noreferrer">String.prototype.split()</a></td><td>把当前字符串按照某个字符串分割成一个字符串数组返回</td><td>传入分隔符</td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/substring" target="_blank" rel="noopener noreferrer">String.prototype.substring()</a></td><td>返回一个字符串在开始索引到结束索引之间的一个子集, 或从开始索引直到字符串的末尾的一个子集</td><td>传入开始字符、结束字符</td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/Trim" target="_blank" rel="noopener noreferrer">String.prototype.trim()</a></td><td>从字符串的两端删除空白字符，返回新字符串</td><td>无参数</td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/trimStart" target="_blank" rel="noopener noreferrer">String.prototype.trimStart()</a></td><td>从字符串的开头删除空白字符，返回新字符串</td><td>无参数</td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/trimEnd" target="_blank" rel="noopener noreferrer">String.prototype.trimEnd()</a></td><td>从字符串的末端删除空白字符，返回新字符串</td><td>无参数</td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/toUpperCase" target="_blank" rel="noopener noreferrer">String.prototype.toUpperCase()</a></td><td>将调用该方法的字符串转为大写形式并返回</td><td>无参数</td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/toLowerCase" target="_blank" rel="noopener noreferrer">String.prototype.toLowerCase()</a></td><td>将调用该方法的字符串转为小写形式并返回</td><td>无参数</td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/replace" target="_blank" rel="noopener noreferrer">String.prototype.replace()</a></td><td>替换字符串中的第一个对应字符为新字符</td><td></td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/replaceall" target="_blank" rel="noopener noreferrer">String.prototype.replaceAll()</a></td><td>替换字符串中的所有对应字符为新字符</td><td></td></tr></tbody></table><h2 id="数学" tabindex="-1"><a class="header-anchor" href="#数学"><span>数学</span></a></h2><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math" target="_blank" rel="noopener noreferrer">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math</a></p><table><thead><tr><th>API</th><th>含义</th><th>备注</th></tr></thead><tbody><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/PI" target="_blank" rel="noopener noreferrer">Math.PI</a></td><td>得到圆周率π</td><td></td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/abs" target="_blank" rel="noopener noreferrer">Math.abs()</a></td><td>求某个数绝对值</td><td>传入一个数</td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/ceil" target="_blank" rel="noopener noreferrer">Math.ceil()</a></td><td>向上取整</td><td>传入一个数</td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/floor" target="_blank" rel="noopener noreferrer">Math.floor()</a></td><td>向下取整</td><td>传入一个数</td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/max" target="_blank" rel="noopener noreferrer">Math.max()</a></td><td>求一个数列中的最大值</td><td>把数列依次传入</td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/min" target="_blank" rel="noopener noreferrer">Math.min()</a></td><td>求一个数列中的最小值</td><td>把数列依次传入</td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/random" target="_blank" rel="noopener noreferrer">Math.random()</a></td><td>得到一个0-1之间的随机小数</td><td>无参；无法取到1</td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/round" target="_blank" rel="noopener noreferrer">Math.round()</a></td><td>返回四舍五入的结果</td><td>传入一个数</td></tr></tbody></table><h2 id="日期" tabindex="-1"><a class="header-anchor" href="#日期"><span>日期</span></a></h2><h3 id="时间基础知识" tabindex="-1"><a class="header-anchor" href="#时间基础知识"><span>时间基础知识</span></a></h3><h4 id="单位" tabindex="-1"><a class="header-anchor" href="#单位"><span>单位</span></a></h4><table><thead><tr><th>单位</th><th>名称</th><th>换算</th></tr></thead><tbody><tr><td>hour</td><td>小时</td><td>1 day = 24 hours</td></tr><tr><td>minute</td><td>分钟</td><td>1 hour = 60 minutes</td></tr><tr><td>second</td><td>秒</td><td>1 minute = 60 seconds</td></tr><tr><td>millisecond （ms）</td><td>毫秒</td><td>1 second = 1000 ms</td></tr><tr><td>nanosecond （ns）</td><td>纳秒</td><td>1 ms = 1000 ns</td></tr></tbody></table><h4 id="gmt和utc" tabindex="-1"><a class="header-anchor" href="#gmt和utc"><span>GMT和UTC</span></a></h4><p>世界划分为24个时区，北京在东8区，格林威治在0时区。</p><figure><img src="'+d+`" alt="alt text" tabindex="0" loading="lazy"><figcaption>alt text</figcaption></figure><p><strong>GMT</strong>：Greenwish Mean Time 格林威治世界时。太阳时，精确到毫秒。</p><p><strong>UTC</strong>：Universal Time Coodinated 世界协调时。以原子时间为计时标准，精确到纳秒。</p><blockquote><p>国际标准中，已全面使用UTC时间，而不再使用GMT时间</p></blockquote><p>GMT和UTC时间在文本表示格式上是一致的，均为<code>星期缩写, 日期 月份 年份 时间 GMT</code>，例如：</p><div class="language-plain line-numbers-mode" data-highlighter="shiki" data-ext="plain" data-title="plain" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>Thu, 27 Aug 2020 08:01:44 GMT</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>另外，ISO 8601标准规定，建议使用以下方式表示时间：</p><div class="language-plain line-numbers-mode" data-highlighter="shiki" data-ext="plain" data-title="plain" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>YYYY-MM-DDTHH:mm:ss.msZ</span></span>
<span class="line"><span>例如：</span></span>
<span class="line"><span>2020-08-27T08:01:44.000Z</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>GMT、UTC、ISO 8601都表示的是零时区的时间</strong></p><h4 id="unix-时间戳" tabindex="-1"><a class="header-anchor" href="#unix-时间戳"><span>Unix 时间戳</span></a></h4><blockquote><p>Unix 时间戳（Unix Timestamp）是Unix系统最早提出的概念</p></blockquote><p>它将UTC时间1970年1月1日凌晨作为起始时间，到指定时间经过的秒数（毫秒数）</p><h4 id="程序中的时间处理" tabindex="-1"><a class="header-anchor" href="#程序中的时间处理"><span>程序中的时间处理</span></a></h4><p><strong>程序对时间的计算、存储务必使用UTC时间，或者时间戳</strong></p><p><strong>在和用户交互时，将UTC时间或时间戳转换为更加友好的文本</strong></p><figure><img src="`+n+`" alt="alt text" tabindex="0" loading="lazy"><figcaption>alt text</figcaption></figure><p>思考下面的问题：</p><ol><li>用户的生日是本地时间还是UTC时间？</li><li>如果要比较两个日期的大小，是比较本地时间还是比较UTC时间？</li><li>如果要显示文章的发布日期，是显示本地时间还是显示UTC时间？</li><li><code>北京时间2020-8-28 10:00:00</code>和<code>格林威治2020-8-28 02:00:00</code>，两个时间哪个大，哪个小？</li><li><code>北京的时间戳为0</code>和<code>格林威治的时间戳为0</code>，它们的时间一样吗？</li><li>一个中国用户注册时填写的生日是<code>1970-1-1</code>，它出生的UTC时间是多少？时间戳是多少？</li></ol><h3 id="日期api" tabindex="-1"><a class="header-anchor" href="#日期api"><span>日期API</span></a></h3><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date" target="_blank" rel="noopener noreferrer">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date</a></p><p>构造函数：</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> Date</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 得到一个当前日期对象</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> Date</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">value</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 根据时间戳得到一个日期对象</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> Date</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">dateString</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 根据一个标准日期字符串得到一个日期对象</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> Date</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">year</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">monthIndex</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">day</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">hours</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">minutes</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">seconds</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">milliseconds</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]]]]]); </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 根据年、月、日、小时、分钟、秒、毫秒得到一个日期对象</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th>API</th><th>含义</th><th>备注</th></tr></thead><tbody><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/now" target="_blank" rel="noopener noreferrer">Date.now()</a></td><td>得到当前时间戳</td><td>无参</td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/getFullYear" target="_blank" rel="noopener noreferrer">Date.prototype.getFullYear()</a></td><td>得到年</td><td>无参；本地时间；</td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/getMonth" target="_blank" rel="noopener noreferrer">Date.prototype.getMonth()</a></td><td>得到月</td><td>无参；本地时间；范围0-11</td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/getDate" target="_blank" rel="noopener noreferrer">Date.prototype.getDate()</a></td><td>得到日</td><td>无参；本地时间；</td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/getHours" target="_blank" rel="noopener noreferrer">Date.prototype.getHours()</a></td><td>得到小时</td><td>无参；本地时间；</td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/getMinutes" target="_blank" rel="noopener noreferrer">Date.prototype.getMinutes()</a></td><td>得到分钟</td><td>无参；本地时间；</td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/getSeconds" target="_blank" rel="noopener noreferrer">Date.prototype.getSeconds()</a></td><td>得到秒</td><td>无参；本地时间；</td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/getMilliseconds" target="_blank" rel="noopener noreferrer">Date.prototype.getMilliseconds()</a></td><td>得到毫秒</td><td>无参；本地时间；</td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleString" target="_blank" rel="noopener noreferrer">Date.prototype.toLocaleString()</a></td><td>得到日期本地的表示方式</td><td></td></tr></tbody></table><h2 id="对象" tabindex="-1"><a class="header-anchor" href="#对象"><span>对象</span></a></h2><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noopener noreferrer">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object</a></p><table><thead><tr><th>API</th><th>含义</th><th>备注</th></tr></thead><tbody><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/assign" target="_blank" rel="noopener noreferrer">Object.assign()</a></td><td>将多个对象的属性混合到一起</td><td>后面覆盖前面</td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/getPrototypeOf" target="_blank" rel="noopener noreferrer">Object.getPrototypeOf()</a></td><td>获取一个对象的隐式原型</td><td></td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf" target="_blank" rel="noopener noreferrer">Object.setPrototypeOf()</a></td><td>设置一个对象的隐式原型</td><td></td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/create" target="_blank" rel="noopener noreferrer">Object.create()</a></td><td>创建一个新对象，同时设置新对象的隐式原型</td><td></td></tr></tbody></table><h2 id="数组" tabindex="-1"><a class="header-anchor" href="#数组"><span>数组</span></a></h2><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array" target="_blank" rel="noopener noreferrer">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array</a></p><table><thead><tr><th>API</th><th>含义</th><th>备注</th></tr></thead><tbody><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/concat" target="_blank" rel="noopener noreferrer">Array.prototype.concat()</a></td><td>把多个数组拼接成一个</td><td></td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/includes" target="_blank" rel="noopener noreferrer">Array.prototype.includes()</a></td><td>判断数组中是否包含某个值</td><td></td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf" target="_blank" rel="noopener noreferrer">Array.prototype.indexOf()</a></td><td>得到数组中某个值的第一个下标</td><td>若不存在则返回-1</td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/lastIndexOf" target="_blank" rel="noopener noreferrer">Array.prototype.lastIndexOf()</a></td><td>得到数组中某个值的最后一个下标</td><td>若不存在则返回-1</td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/join" target="_blank" rel="noopener noreferrer">Array.prototype.join()</a></td><td>把数组中每一项使用某个字符连接起来，形成一个字符串返回</td><td></td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/push" target="_blank" rel="noopener noreferrer">Array.prototype.push()</a></td><td>向数组的末尾添加一项</td><td></td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/unshift" target="_blank" rel="noopener noreferrer">Array.prototype.unshift()</a></td><td>向数组的开头添加一项</td><td></td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/pop" target="_blank" rel="noopener noreferrer">Array.prototype.pop()</a></td><td>删除数组最后一项</td><td>返回被删除的值</td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/shift" target="_blank" rel="noopener noreferrer">Array.prototype.shift()</a></td><td>删除数组第一项</td><td>返回被删除的值</td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/splice" target="_blank" rel="noopener noreferrer">Array.prototype.splice()</a></td><td>删除、修改、插入任何位置的值</td><td></td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/reverse" target="_blank" rel="noopener noreferrer">Array.prototype.reverse()</a></td><td>将数组中的元素顺序颠倒</td><td></td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/sort" target="_blank" rel="noopener noreferrer">Array.prototype.sort()</a></td><td>对数组进行排序</td><td>传入比较函数：0-位置不变，&lt;0-前者在前，&gt;0-前者在后</td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/slice" target="_blank" rel="noopener noreferrer">Array.prototype.slice()</a></td><td>对数组进行切割</td><td></td></tr></tbody></table><h2 id="函数" tabindex="-1"><a class="header-anchor" href="#函数"><span>函数</span></a></h2><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function" target="_blank" rel="noopener noreferrer">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function</a></p><table><thead><tr><th>API</th><th>含义</th><th>备注</th></tr></thead><tbody><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/apply" target="_blank" rel="noopener noreferrer">Function.prototype.apply()</a></td><td>执行函数，绑定this</td><td>参数列表以数组的形式传递</td></tr><tr><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/call" target="_blank" rel="noopener noreferrer">Function.prototype.call()</a></td><td>执行函数，绑定this</td><td>参数列表依次传递</td></tr></tbody></table>`,49);function c(b,g){return l(),r("div",null,[s,p,a(" more "),h])}const v=t(i,[["render",c],["__file","标准库.html.vue"]]),m=JSON.parse('{"path":"/frontEnd/javascript/%E6%A0%87%E5%87%86%E5%BA%93.html","title":"标准库","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"1970-01-01T00:00:00.000Z","category":["前端"],"description":"库 Library API Application Program Interface - 应用程序编程接口","head":[["meta",{"property":"og:url","content":"https://www.topoo.top/frontEnd/javascript/%E6%A0%87%E5%87%86%E5%BA%93.html"}],["meta",{"property":"og:site_name","content":"张耀"}],["meta",{"property":"og:title","content":"标准库"}],["meta",{"property":"og:description","content":"库 Library API Application Program Interface - 应用程序编程接口"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-10T03:33:16.000Z"}],["meta",{"property":"article:author","content":"张耀"}],["meta",{"property":"article:published_time","content":"1970-01-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-10T03:33:16.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"标准库\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"1970-01-01T00:00:00.000Z\\",\\"dateModified\\":\\"2024-09-10T03:33:16.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"张耀\\"}]}"]]},"headers":[{"level":2,"title":"包装类","slug":"包装类","link":"#包装类","children":[{"level":3,"title":"Number","slug":"number","link":"#number","children":[]},{"level":3,"title":"String","slug":"string","link":"#string","children":[]}]},{"level":2,"title":"数学","slug":"数学","link":"#数学","children":[]},{"level":2,"title":"日期","slug":"日期","link":"#日期","children":[{"level":3,"title":"时间基础知识","slug":"时间基础知识","link":"#时间基础知识","children":[]},{"level":3,"title":"日期API","slug":"日期api","link":"#日期api","children":[]}]},{"level":2,"title":"对象","slug":"对象","link":"#对象","children":[]},{"level":2,"title":"数组","slug":"数组","link":"#数组","children":[]},{"level":2,"title":"函数","slug":"函数","link":"#函数","children":[]}],"git":{"createdTime":1725937688000,"updatedTime":1725939196000,"contributors":[{"name":"zy","email":"zhangyao_base@163.com","commits":1}]},"readingTime":{"minutes":7.16,"words":2148},"filePathRelative":"frontEnd/javascript/标准库.md","localizedDate":"1970年1月1日","excerpt":"\\n<p>库 Library\\nAPI Application Program Interface - 应用程序编程接口</p>\\n","autoDesc":true}');export{v as comp,m as data};
